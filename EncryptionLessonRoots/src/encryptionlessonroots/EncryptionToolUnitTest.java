/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryptionlessonroots;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jimstewart
 */
public class EncryptionToolUnitTest extends javax.swing.JFrame {
    /**
     * Creates new form EncryptionToolUnitTest
     */
    public EncryptionToolUnitTest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MessageLabel = new javax.swing.JLabel();
        EncryptionResponseLabel = new javax.swing.JLabel();
        TestEncryptionToolButton = new javax.swing.JButton();
        TestDecryptionToolButton = new javax.swing.JButton();
        DecryptionResponseLabel = new javax.swing.JLabel();
        testPatternEncryptButton = new javax.swing.JButton();
        testPatternDecryptionButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MessageLabel.setText("Original message is:");

        EncryptionResponseLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        TestEncryptionToolButton.setText("Test Encryption Tool");
        TestEncryptionToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestEncryptionToolButtonActionPerformed(evt);
            }
        });

        TestDecryptionToolButton.setText("TestDecryptionTool");
        TestDecryptionToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestDecryptionToolButtonActionPerformed(evt);
            }
        });

        DecryptionResponseLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        testPatternEncryptButton.setText("Test pattern Encryption");
        testPatternEncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testPatternEncryptButtonActionPerformed(evt);
            }
        });

        testPatternDecryptionButton.setText("Test Pattern Decryption");
        testPatternDecryptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testPatternDecryptionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EncryptionResponseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TestEncryptionToolButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(testPatternEncryptButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TestDecryptionToolButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(testPatternDecryptionButton)))
                        .addGap(0, 22, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DecryptionResponseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MessageLabel)
                                .addGap(0, 260, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TestEncryptionToolButton)
                    .addComponent(testPatternEncryptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EncryptionResponseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TestDecryptionToolButton)
                    .addComponent(testPatternDecryptionButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DecryptionResponseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TestEncryptionToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestEncryptionToolButtonActionPerformed
        // TODO add your handling code here:
        String encryptedMessage = enc.encrypt(originalMessage);
        if(encryptedMessage.equals(expectedEncryptedMessage)){
            EncryptionResponseLabel.setText("<html>Successful unit test. Encrypted Message is " +
                    "<span style = 'color:#ff0000>" +
                    expectedEncryptedMessage + 
                    "</span></html>");
        } else {
           EncryptionResponseLabel.setText("<html>Unsuccessful unit test. Encrypted Message is " + 
                    "<span style = 'color:#ff0000'>" +
                   encryptedMessage + 
                   "</span>should be <span style = 'color:#ff0000'>" +
                    expectedEncryptedMessage + 
               "</span></html>");
        } 
    }//GEN-LAST:event_TestEncryptionToolButtonActionPerformed

    private void TestDecryptionToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestDecryptionToolButtonActionPerformed
        // TODO add your handling code here:
        String decryptedMessage = dec.decrypt(originalMessage);
        if(decryptedMessage.equals(originalMessage)){
            DecryptionResponseLabel.setText(
                    "<html>Successful unit test. Encrypted Message is " +
                    "<span style = 'color:#ff0000>" +
                    originalMessage +
                    "</span></html>");
        } else {
           DecryptionResponseLabel.setText(
                   "<html>Unsuccessful unit test. Encrypted Message is " + 
                   decryptedMessage + 
                   "</span>should be <span style = 'color:#ff0000'>" +
                    originalMessage + 
                    "</span></html>");
        }
    }//GEN-LAST:event_TestDecryptionToolButtonActionPerformed

    private void testPatternEncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testPatternEncryptButtonActionPerformed
        String message = "Be sure to drink your Ovaltine.";
        String expectedEncryptedMessage = "Î×ÆÍâÖA»ÛÕÒtáØãÙA¦ßÍÐ½ÖÎ";
        String encryptedMessage = enc.patternEncrypt(message, pattern);
        if(encryptedMessage.equals(expectedEncryptedMessage)){
            EncryptionResponseLabel.setText("<head><meta charset = 'UTF-8'></head>"+ 
                    "<html>Successful unit test. Encrypted Message is " +
            "<span style = 'color:#ff0000>" +
            expectedEncryptedMessage + 
            "</span></html>");
        } else {
            EncryptionResponseLabel.setText(
            "<html>Unsuccessful unit test. Encrypted Message is " + 
            encryptedMessage + 
            "</span>should be <span style = 'color:#ff0000'>" +
             expectedEncryptedMessage + 
             "</span></html>");
            }
        
    }//GEN-LAST:event_testPatternEncryptButtonActionPerformed

    private void testPatternDecryptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testPatternDecryptionButtonActionPerformed
        String encryptedMessage = "Î×ÆÍâÖA»ÛÕÒtáØãÙA¦ßÍÐ½ÖÎ";
        String expectedDecryptedMessage = "Be sure to drink your Ovaltine.";
        String decryptedMessage = dec.patternDecrypt(encryptedMessage, pattern);
        if(decryptedMessage.equals(expectedDecryptedMessage)){
            DecryptionResponseLabel.setText(
                    "<html>Successful unit test. Encrypted Message is " +
                    "<span style = 'color:#ff0000>" +
                    originalMessage +
                    "</span></html>");
        } else {
           DecryptionResponseLabel.setText(
                   "<html>Unsuccessful unit test. Encrypted Message is " + 
                   decryptedMessage + 
                   "</span>should be <span style = 'color:#ff0000'>" +
                    expectedDecryptedMessage + 
                    "</span></html>");
        }        // decode it and test
    }//GEN-LAST:event_testPatternDecryptionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncryptionToolUnitTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncryptionToolUnitTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncryptionToolUnitTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncryptionToolUnitTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncryptionToolUnitTest().setVisible(true);
            }
        });
    }
    String originalMessage = "Be sure to drink your Ovaltine.";
    String expectedEncryptedMessage = "Gj%xzwj%yt%iwnsp%~tzw%T{fqynsj3";
    String pattern = "Wild thing!";
    EncryptionTool enc = new EncryptionTool();
    DecryptionTool dec = new DecryptionTool();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DecryptionResponseLabel;
    private javax.swing.JLabel EncryptionResponseLabel;
    private javax.swing.JLabel MessageLabel;
    private javax.swing.JButton TestDecryptionToolButton;
    private javax.swing.JButton TestEncryptionToolButton;
    private javax.swing.JButton testPatternDecryptionButton;
    private javax.swing.JButton testPatternEncryptButton;
    // End of variables declaration//GEN-END:variables
}
